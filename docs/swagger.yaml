---
components:
  parameters:
    AuthHeader:
      description: Bearer токен для авторизации
      in: header
      name: Authorization
      required: true
      schema:
        type: string
  schemas:
    Comment:
      properties:
        authorID:
          example: 123
          type: integer
        authorName:
          example: username
          type: string
        children:
          items:
            $ref: '#/components/schemas/Comment'
          type: array
        createdAt:
          example: '2023-11-15T10:00:00Z'
          type: string
        id:
          example: 1
          type: integer
        postID:
          example: 1
          type: integer
        text:
          example: Комментарий к посту
          type: string
      type: object
    GetPostsResponse:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        posts:
          items:
            $ref: '#/components/schemas/Post'
          type: array
      type: object
    Pagination:
      properties:
        pageIndex:
          example: 1
          type: integer
        recordsPerPage:
          example: 10
          type: integer
        totalRecords:
          example: 100
          type: integer
      type: object
    PaginationBody:
      properties:
        pageIndex:
          example: 1
          type: integer
        recordsPerPage:
          example: 10
          type: integer
      type: object
    Post:
      properties:
        authorId:
          example: '123'
          type: string
        authorName:
          example: username
          type: string
        date:
          example: '2023-11-15T10:00:00Z'
          type: string
        id:
          example: '1'
          type: string
        text:
          example: This is a new post.
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: Документация для API
  title: RESTful API
  version: 1.0.0
openapi: 3.0.0
paths:
  /auth/login/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  example: strongpassword
                  type: string
                username:
                  example: testuser
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    example: eyJhbGciOiJIUzI1NiIsInR...
                    type: string
                  refreshToken:
                    example: eyJhbGciOiJIUzI1NiIsInR...
                    type: string
                type: object
          description: Успешный вход
        '401':
          description: Неверные учетные данные
      summary: Аутентификация пользователя
      tags:
        - auth
  /auth/logout/:
    parameters:
      - $ref: '#/components/parameters/AuthHeader'
    post: null
    responses:
      '200':
        description: Успешный выход
      '500':
        description: Ошибка при выходе пользователя
      summary: Выход пользователя
      tags:
        - auth
  /auth/refresh/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refreshToken:
                  example: refresh_token_value
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    example: eyJhbGciOiJIUzI1NiIsInR...
                    type: string
                  refreshToken:
                    example: eyJhbGciOiJIUzI1NiIsInR...
                    type: string
                type: object
          description: Новый токен выдан
        '401':
          description: Ошибка обновления access_token
      summary: Обновление токена
      tags:
        - auth
  /auth/registration/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  example: strongpassword
                  type: string
                username:
                  example: testuser
                  type: string
              type: object
        required: true
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
        '500':
          description: Ошибка при регистрации пользователя
      summary: Регистрация пользователя
      tags:
        - auth
  /comments/:
    get:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
        - description: Индекс страницы для пагинации
          in: query
          name: pageIndex
          required: true
          schema:
            example: 1
            type: integer
        - description: Количество записей на странице
          in: query
          name: recordsPerPage
          required: true
          schema:
            example: 10
            type: integer
        - description: ID поста, для которого нужно получить комментарии
          in: query
          name: postID
          required: true
          schema:
            example: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  comments:
                    items:
                      properties:
                        authorID:
                          example: 123
                          type: integer
                        authorName:
                          example: username
                          type: string
                        children:
                          items:
                            $ref: '#/components/schemas/Comment'
                          type: array
                        createdAt:
                          example: '2023-11-15T10:00:00Z'
                          type: string
                        id:
                          example: 1
                          type: integer
                        postID:
                          example: 1
                          type: integer
                        text:
                          example: Комментарий к посту
                          type: string
                      type: object
                    type: array
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                type: object
          description: Список комментариев
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка получения комментариев
      summary: Получение списка комментариев
      tags:
        - comments
    post:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                parentID:
                  description: ID родительского комментария (если есть)
                  example: 2
                  nullable: true
                  type: integer
                postID:
                  example: 1
                  type: integer
                text:
                  example: Это новый комментарий
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Comment created successfully
                    type: string
                type: object
          description: Комментарий успешно создан
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка создания комментария
      summary: Создание нового комментария
      tags:
        - comments
  /comments/{id}/:
    delete:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
        - description: ID комментария для удаления
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Comment deleted successfully
                    type: string
                type: object
          description: Комментарий успешно удален
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка удаления комментария
      summary: Удаление комментария
      tags:
        - comments
    put:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
        - description: ID комментария для обновления
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                text:
                  example: Обновленный текст комментария
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Comment updated successfully
                    type: string
                type: object
          description: Комментарий успешно обновлен
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка обновления комментария
      summary: Обновление комментария
      tags:
        - comments
  /posts/:
    get:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
        - description: Индекс страницы для пагинации
          in: query
          name: pageIndex
          required: true
          schema:
            example: 1
            type: integer
        - description: Количество записей на странице
          in: query
          name: recordsPerPage
          required: true
          schema:
            example: 10
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostsResponse'
          description: Список постов
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка получения постов
      summary: Получение списка постов
      tags:
        - posts
    post:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                text:
                  example: This is a new post.
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Пост успешно создан
        '500':
          description: Ошибка создания поста
      summary: Создание нового поста
      tags:
        - posts
  /posts/{id}/:
    delete:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
        - description: ID поста для удаления
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Пост успешно удален
        '500':
          description: Ошибка удаления поста
      summary: Удаление поста
      tags:
        - posts
    put:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
        - description: ID поста для обновления
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                text:
                  example: Updated post content
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Пост успешно обновлен
        '400':
          content:
            application/json:
              schema:
                properties:
                  error:
                    example: Missing required fields
                    type: string
                type: object
          description: Неверный запрос
        '500':
          description: Ошибка обновления поста
      summary: Обновление поста
      tags:
        - posts
  /users/:
    get:
      parameters:
        - $ref: '#/components/parameters/AuthHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    example: '123'
                    type: string
                  username:
                    example: testuser
                    type: string
                type: object
          description: Информация о пользователе
        '500':
          description: Ошибка получения пользователя
      summary: Получение информации о пользователе
      tags:
        - users
security:
  - BearerAuth: []
servers:
  - url: http://localhost:85